{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions/actions.js","actions/types.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","fetch","then","response","json","users","searchField","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","length","connect","dispatch","e","payload","target","value","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"sRAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,yBAAKC,UAAU,uDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,6BACE,4BAAKF,GACL,2BAAIC,MCcGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,6BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCEhBW,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,yBAAKX,UAAU,OACb,2BACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCHI,EARA,SAACC,GACd,OACE,yBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEJ,EAAMK,WCuBEC,E,kDAzBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,8DAOIC,EAAOC,GACvBC,KAAKC,SAAS,CACZJ,UAAU,M,+BAKZ,OAAIG,KAAKJ,MAAMC,SAEX,6BACE,2DAIGG,KAAKX,MAAMK,a,GAtBGQ,aCOrBC,G,wDACJ,aAAe,IAAD,8BACZ,gBACKP,MAAQ,CACXnB,OAAQ,IAHE,E,gEAOO,IAAD,OAClB2B,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKP,SAAS,CAAExB,OAAQ+B,S,+BAGlC,IACA/B,EAAWuB,KAAKJ,MAAhBnB,OADD,EAEiCuB,KAAKX,MAArCoB,EAFD,EAECA,YAAaC,EAFd,EAEcA,eACfC,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASN,EAAYK,kBAEvD,OAAQrC,EAAOuC,OAGX,yBAAK3C,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAc0B,IACzB,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjC,OAAQkC,OAP1B,2C,GArBYT,cAgDHe,eAZS,SAAArB,GACtB,MAAO,CACLa,YAAab,EAAMa,gBAII,SAACS,GAC1B,MAAO,CACLR,eAAgB,SAACS,GAAD,OAAOD,ECnDc,CACvCjC,KCHgC,qBDIhCmC,QDiDiDD,EAAEE,OAAOC,YAI7CL,CAA6Cd,G,QGvDtDoB,EAAe,CACnBd,YAAa,ICQTe,G,MAAQC,aDLc,WAAwC,IAAvC7B,EAAsC,uDAA9B2B,EAAcG,EAAgB,uDAAP,GAC1D,OAAOA,EAAOzC,MACZ,IDR8B,qBCS5B,OAAO,2BAAIW,GAAX,IAAkBa,YAAaiB,EAAON,UACxC,QACE,OAAOxB,OCEb+B,IAASC,OACT,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.294ca901.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor() {\n    super(); \n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>Oooopps. That is not good.</h1>\n        </div>\n      )\n    }\n      return this.props.children\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { setSearchField } from '../actions/actions';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {this.setState({ robots: users})});\n  }\n\n  render() {\n    const { robots } = this.state;\n    const { searchField, onSearchChange } = this.props;\n    const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading</h1> :\n      (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (e) => dispatch(setSearchField(e.target.value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { CHANGE_SEARCHFIELD } from './types';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCHFIELD, \n  payload: text\n})","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD'","import { CHANGE_SEARCHFIELD } from './actions/types'\n\nconst initialState = {\n  searchField: ''\n}\n\nexport const searchRobots = (state = initialState, action = {}) => {\n  switch(action.type) {\n    case CHANGE_SEARCHFIELD:\n      return {...state, searchField: action.payload}\n    default: \n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './containers/App';\n// import serviceWorker from './serviceWorker';\nimport { searchRobots } from './reducers';\nimport 'tachyons';\nimport redux from 'redux';\n\nconst store = createStore(searchRobots)\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\ndocument.getElementById('root'));\n\n"],"sourceRoot":""}